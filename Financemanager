import json
import os
from datetime import datetime

# Function to load expense data from file
def load_expenses():
    if os.path.exists('expenses.json'):
        with open('expenses.json', 'r') as f:
            return json.load(f)
    else:
        return {'expenses': [], 'categories': {}}

# Function to save expense data to file
def save_expenses(expenses):
    with open('expenses.json', 'w') as f:
        json.dump(expenses, f)

# Function to add a new expense
def add_expense(expenses):
    amount = float(input("Enter the amount spent: "))
    description = input("Enter a brief description: ")
    category = input("Enter the category (food/transportation/entertainment): ").lower()
    
    timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    expense = {'amount': amount, 'description': description, 'category': category, 'timestamp': timestamp}
    expenses['expenses'].append(expense)
    
    # Update category-wise expenditure
    if category not in expenses['categories']:
        expenses['categories'][category] = 0
    expenses['categories'][category] += amount
    
    save_expenses(expenses)
    print("Expense added successfully.")

# Function to view summaries of monthly expenses and category-wise expenditure
def view_summary(expenses):
    month = input("Enter the month (YYYY-MM) to view summary: ")
    
    total_expenses = 0
    for expense in expenses['expenses']:
        if expense['timestamp'][:7] == month:
            total_expenses += expense['amount']
    
    print(f"Total expenses for {month}: ${total_expenses:.2f}")
    
    print("Category-wise expenditure:")
    for category, amount in expenses['categories'].items():
        print(f"{category.capitalize()}: ${amount:.2f}")

# Main function
def main():
    expenses = load_expenses()
    
    while True:
        print("\nExpense Tracker")
        print("1. Add Expense")
        print("2. View Summary")
        print("3. Exit")
        
        choice = input("Enter your choice: ")
        
        if choice == '1':
            add_expense(expenses)
        elif choice == '2':
            view_summary(expenses)
        elif choice == '3':
            print("Exiting...")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
