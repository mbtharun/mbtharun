import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

public class ExpenseTracker {
    private Map<String, List<Expense>> expensesByCategory;
    private Scanner scanner;

    public ExpenseTracker() {
        expensesByCategory = new HashMap<>();
        scanner = new Scanner(System.in);
    }

    public void trackExpense() {
        System.out.print("Enter expense amount: ");
        double amount = scanner.nextDouble();
        scanner.nextLine(); // Consume newline
        System.out.print("Enter expense description: ");
        String description = scanner.nextLine();
        System.out.print("Enter expense category: ");
        String category = scanner.nextLine();

        Expense expense = new Expense(amount, description, category);
        expensesByCategory.computeIfAbsent(category, k -> new ArrayList<>()).add(expense);

        System.out.println("Expense tracked successfully!");
    }

    public void viewMonthlySummary() {
        System.out.println("Monthly Summary:");
        for (Map.Entry<String, List<Expense>> entry : expensesByCategory.entrySet()) {
            String category = entry.getKey();
            double totalAmount = entry.getValue().stream().mapToDouble(Expense::getAmount).sum();
            System.out.println("Category: " + category + ", Total Amount: $" + totalAmount);
        }
    }

    public static void main(String[] args) {
        ExpenseTracker expenseTracker = new ExpenseTracker();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\nExpense Tracker Menu:");
            System.out.println("1. Track Expense");
            System.out.println("2. View Monthly Summary");
            System.out.println("3. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    expenseTracker.trackExpense();
                    break;
                case 2:
                    expenseTracker.viewMonthlySummary();
                    break;
                case 3:
                    System.out.println("Exiting Expense Tracker. Goodbye!");
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid choice. Please enter a valid option.");
            }
        }
    }
}

class Expense {
    private double amount;
    private String description;
    private String category;

    public Expense(double amount, String description, String category) {
        this.amount = amount;
        this.description = description;
        this.category = category;
    }

    public double getAmount() {
        return amount;
    }
}
